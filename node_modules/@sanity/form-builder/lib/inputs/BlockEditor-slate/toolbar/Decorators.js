'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decorator = undefined;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _button = require('part:@sanity/components/toggles/button');

var _button2 = _interopRequireDefault(_button);

var _formatBoldIcon = require('part:@sanity/base/format-bold-icon');

var _formatBoldIcon2 = _interopRequireDefault(_formatBoldIcon);

var _formatItalicIcon = require('part:@sanity/base/format-italic-icon');

var _formatItalicIcon2 = _interopRequireDefault(_formatItalicIcon);

var _formatStrikethroughIcon = require('part:@sanity/base/format-strikethrough-icon');

var _formatStrikethroughIcon2 = _interopRequireDefault(_formatStrikethroughIcon);

var _formatUnderlinedIcon = require('part:@sanity/base/format-underlined-icon');

var _formatUnderlinedIcon2 = _interopRequireDefault(_formatUnderlinedIcon);

var _formatCodeIcon = require('part:@sanity/base/format-code-icon');

var _formatCodeIcon2 = _interopRequireDefault(_formatCodeIcon);

var _sanityLogoIcon = require('part:@sanity/base/sanity-logo-icon');

var _sanityLogoIcon2 = _interopRequireDefault(_sanityLogoIcon);

var _Decorators = require('./styles/Decorators.css');

var _Decorators2 = _interopRequireDefault(_Decorators);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const decorator = exports.decorator = _propTypes2.default.shape({
  active: _propTypes2.default.bool,
  type: _propTypes2.default.string
});

class Decorators extends _react2.default.Component {
  constructor(...args) {
    var _temp;

    return _temp = super(...args), this.renderDecoratorButton = item => {
      const onClick = event => {
        this.props.onClick(item);
      };
      const Icon = this.getIcon(item.type);
      let title = item.type;
      title = title.charAt(0).toUpperCase() + title.slice(1);
      return _react2.default.createElement(_button2.default, {
        key: `decoratorButton${item.type}`,
        selected: !!item.active,
        onClick: onClick,
        title: title,
        className: _Decorators2.default.button,
        icon: Icon
      });
    }, _temp;
  }

  getIcon(type) {
    switch (type) {
      case 'strong':
        return _formatBoldIcon2.default;
      case 'em':
        return _formatItalicIcon2.default;
      case 'underline':
        return _formatUnderlinedIcon2.default;
      case 'strike-through':
        return _formatStrikethroughIcon2.default;
      case 'code':
        return _formatCodeIcon2.default;
      default:
        return _sanityLogoIcon2.default;
    }
  }

  render() {
    return this.props.decorators ? _react2.default.createElement(
      'div',
      { className: _Decorators2.default.root },
      this.props.decorators.map(this.renderDecoratorButton)
    ) : null;
  }
}
exports.default = Decorators;
Decorators.propTypes = {
  onClick: _propTypes2.default.func,
  decorators: _propTypes2.default.arrayOf(decorator)
};