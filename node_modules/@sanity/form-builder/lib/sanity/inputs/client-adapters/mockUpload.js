'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mockUpload = mockUpload;

var _observable = require('@sanity/observable');

var _observable2 = _interopRequireDefault(_observable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createProgressEvent(progress) {
  return { type: 'progress', stage: 'upload', percent: progress };
}


function simulateProgress(updateInterval /*: number*/ = 200, speed /*: number*/ = 2) {
  return new _observable2.default(observer => {
    let progress = 0;
    observer.next(progress);
    const interval = setInterval(next, updateInterval);

    return () => clearInterval(interval);

    function next() {
      progress = Math.min(100, progress + (speed + Math.random() * speed));
      observer.next(progress);
      if (progress === 100) {
        observer.complete();
      }
    }
  });
}

function mockUpload(assetDoc /*: Object*/) {
  return simulateProgress(100 + Math.random() * 500, 10 + Math.random() * 50).map(createProgressEvent).mergeMap(event => {
    return _observable2.default.of(...[event, event.percent === 100 && {
      type: 'complete',
      asset: assetDoc
    }].filter(Boolean));
  });
}