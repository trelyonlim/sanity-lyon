'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});


// Temporary solution to ensure we have a central registry over used helpIds
/*:: import type {Severity, ValidationResult} from '../typedefs'*/
const HELP_IDS = exports.HELP_IDS = {
  TYPE_NAME_RESERVED: 'schema-type-name-reserved',
  TYPE_MISSING_NAME: 'schema-type-missing-name-or-type',
  TYPE_MISSING_TYPE: 'schema-type-missing-name-or-type',
  TYPE_TITLE_RECOMMENDED: 'schema-type-title-is-recommended',
  TYPE_TITLE_INVALID: 'schema-type-title-is-recommended',
  OBJECT_FIELDS_INVALID: 'schema-object-fields-invalid',
  OBJECT_FIELD_NOT_UNIQUE: 'schema-object-fields-invalid',
  OBJECT_FIELD_NAME_INVALID: 'schema-object-fields-invalid',
  ARRAY_OF_INVALID: 'schema-array-of-invalid',
  ARRAY_OF_NOT_UNIQUE: 'schema-array-of-invalid',
  REFERENCE_TO_INVALID: 'schema-reference-to-invalid',
  REFERENCE_TO_NOT_UNIQUE: 'schema-reference-to-invalid',
  SLUG_SLUGIFY_FN_RENAMED: 'slug-slugifyfn-renamed'
};

function createValidationResult(severity /*: Severity*/, message /*: string*/, helpId /*: ?string*/) /*: ValidationResult*/ {
  if (helpId && !Object.keys(HELP_IDS).some(id => HELP_IDS[id] === helpId)) {
    throw new Error(`Used the unknown helpId "${helpId}", please add it to the array in createValidationResult.js`);
  }
  return {
    severity,
    message,
    helpId
  };
}

const error = exports.error = (message /*: string*/, helpId /*: ?string*/, path /*: ?(string[])*/) => createValidationResult('error', message, helpId);

const warning = exports.warning = (message /*: string*/, helpId /*: ?string*/, path /*: ?(string[])*/) => createValidationResult('warning', message, helpId);

const info = exports.info = (message /*: string*/, helpId /*: ?string*/, path /*: ?(string[])*/) => createValidationResult('info', message, helpId);