'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AnyType = undefined;

var _omit2 = require('lodash/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _pick2 = require('lodash/pick');

var _pick3 = _interopRequireDefault(_pick2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const OVERRIDABLE_FIELDS = ['jsonType', 'type', 'name', 'title', 'description', 'options', 'fieldsets'];

const ANY_CORE = {
  name: 'any',
  type: null,
  jsonType: 'any'
};

const AnyType = exports.AnyType = {
  get() {
    return ANY_CORE;
  },
  extend(subTypeDef, extendMember) {
    const parsed = Object.assign((0, _pick3.default)(ANY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {
      type: ANY_CORE,
      of: subTypeDef.of.map(fieldDef => {
        return {
          name: fieldDef.name,
          type: extendMember((0, _omit3.default)(fieldDef, 'name'))
        };
      })
    });

    return subtype(parsed);

    function subtype(parent) {
      return {
        get() {
          return parent;
        },
        extend: extensionDef => {
          if (extensionDef.of) {
            throw new Error('Cannot override `of` property of subtypes of "array"');
          }
          const current = Object.assign({}, parent, (0, _pick3.default)(extensionDef, OVERRIDABLE_FIELDS), {
            type: parent
          });
          return subtype(current);
        }
      };
    }
  }
};